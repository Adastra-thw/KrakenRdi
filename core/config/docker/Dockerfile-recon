# Dockerfile for RECON image in RedDocker.
# Author: Adastra.
# Website: http://thehackerway.com 
# Github: https://github.com/Adastra-thw/docker-for-redteam  
# Simple command to generate a new image using this Dockerfile
# docker build -t adastra/docker-for-redteam:recon -f Dockerfile-recon .


###################################################################################################################
# This Dockerfile uses multi-stage build patterns to include multiple configurations and inhereit common features 
# For more information about multi-stage buildings in Docker, please read the official documentation.             
# https://docs.docker.com/develop/develop-images/multistage-build/ 												  
###################################################################################################################

# Declaration of arguments to control the building flow and create images dynamically. 

ARG VERSION=latest

###################################################################################################################
# BASE IMAGE 																							          
# DESCRIPTION:																									  
# This will be the base image, the parent of every image declared in the project. 								  
# This will include the needed software to install the tools of every stage smothly.							  
###################################################################################################################
FROM debian:${VERSION} AS base
	LABEL author="Adastra"
	LABEL description="Layer with the needed libraries and software."
	ENV ROOT_DIR /redteam
	RUN apt-get update && apt-get -y install net-tools netcat nano \
		python3 python3-dev python3-pip \
		python python-dev python-pip \
		unzip wget curl git gcc libc-dev libxslt-dev \
		openjdk-11-jre openjdk-11-jdk \
		libevent-dev libssl-dev zlib1g zlib1g-dev \
		firefox-esr xfce4-terminal \
		autoconf automake libtool apt-utils \
		openssh-server


	ENV WORKDIR_FULL=${ROOT_DIR}/tools
	ENV WORKDIR_RECON=${WORKDIR_FULL}/recon

	########################################
	#	GLOBAL VARIABLES FROM RECON IMAGE
	########################################
	ARG RECON_RECONNG=True
	ARG RECON_PHOTON=True
	ARG RECON_THEHARVESTER=True
	ARG RECON_SKIPTRACER=True
	ARG RECON_METAGOOFIL=True
	ARG RECON_JUSTMETADATA=True
	ARG RECON_SPIDERFOOT=True
	ARG RECON_MALTEGO=False
	ARG RECON_PHONEINFOGA=True
	ARG RECON_NMAP=True

	ENV RECON_RECONNG $RECON_RECONNG
	ENV RECON_PHOTON $RECON_PHOTON
	ENV RECON_THEHARVESTER $RECON_THEHARVESTER
	ENV RECON_SKIPTRACER $RECON_SKIPTRACER
	ENV RECON_METAGOOFIL $RECON_METAGOOFIL
	ENV RECON_JUSTMETADATA $RECON_JUSTMETADATA
	ENV RECON_SPIDERFOOT $RECON_SPIDERFOOT
	ENV RECON_MALTEGO $RECON_MALTEGO
	ENV RECON_PHONEINFOGA $RECON_PHONEINFOGA
	ENV RECON_NMAP $RECON_NMAP

###################################################################################################################
# RECON IMAGE 																							          
# DESCRIPTION:																									  
# Include the tools for the Intelligence gathering stage.						 								  
# TOOLS:																										  
#	[*]	Recon-ng: https://github.com/lanmaster53/recon-ng 														  
#	[*] Photon: https://github.com/s0md3v/Photon  																  
#	[*] skiptracer: https://github.com/xillwillx/skiptracer	        											  
#	[*] theHarvester: https://github.com/laramies/theHarvester 													  
#	[*] metagoofil: https://github.com/laramies/metagoofil 														  
#	[*] JustMetadata: https://github.com/FortyNorthSecurity/Just-Metadata 										  	
#	[*] Maltego: https://www.paterva.com/web7/downloads.php 														  
#	[*] Spiderfoot: https://github.com/smicallef/spiderfoot														  
###################################################################################################################
FROM base AS reddocker-recon
	LABEL author="Adastra"
	LABEL description="Layer for recon stage."
	ENV ROOT_DIR /redteam
	WORKDIR ${WORKDIR_RECON}
	SHELL ["/bin/bash", "-c"]
	COPY data/README-recon.txt ${WORKDIR_RECON}

	RUN if [ "$RECON_RECONNG" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/lanmaster53/recon-ng.git ; fi ; \
		if [ "$RECON_PHOTON" = "True" ] ; then cd ${WORKDIR_RECON} &&  git clone https://github.com/s0md3v/Photon ; fi ; \
		if [ "$RECON_THEHARVESTER" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/laramies/theHarvester ; fi ; \
		if [ "$RECON_SKIPTRACER" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/xillwillx/skiptracer.git ; fi ; \
		if [ "$RECON_METAGOOFIL" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/laramies/metagoofil ; fi ; \
		if [ "$RECON_JUSTMETADATA" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/FortyNorthSecurity/Just-Metadata.git && cd Just-Metadata/setup && ./setup.sh ; fi ; \
		if [ "$RECON_SPIDERFOOT" = "True" ] ; then cd ${WORKDIR_RECON} && git clone https://github.com/smicallef/spiderfoot.git ; fi ; \
		if [ "$RECON_MALTEGO" = "True" ] ; then cd ${WORKDIR_RECON} && mkdir maltego && cd maltego && wget https://maltego-downloads.s3.us-east-2.amazonaws.com/linux/Maltego.v4.2.9.12898.linux.zip && unzip Maltego.v4.2.9.12898.linux.zip ; fi ; \
		if [ "$RECON_PHONEINFOGA" = "True" ] ; then cd ${WORKDIR_RECON} && mkdir phoneinfoga && cd phoneinfoga && curl -L "https://github.com/sundowndev/phoneinfoga/releases/download/v2.0.5/phoneinfoga_$(uname -s)_$(uname -m).tar.gz" -o phoneinfoga.tar.gz && tar xvf phoneinfoga.tar.gz && rm -rf phoneinfoga.tar.gz; fi


###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM base as reddocker-composition
	LABEL author="Adastra"
	LABEL description="Composition layer. Here everything gets prepared for the final image depending on the tools enabled."
	WORKDIR ${WORKDIR_RECON}
	COPY --from=reddocker-recon ${WORKDIR_RECON} ${WORKDIR_RECON}

	#Installation of any program that needs Shared libraries needs to be run in the final image and just after the "COPY --from..." instruction.
	RUN if [ "$RECON_RECONNG" = "True" ] ; then cd ${WORKDIR_RECON}/recon-ng && pip3 install -r REQUIREMENTS; fi ; \
		if [ "$RECON_PHOTON" = "True" ] ; then cd ${WORKDIR_RECON}/Photon && pip3 install -r requirements.txt ; fi ; \
		if [ "$RECON_THEHARVESTER" = "True" ] ; then cd ${WORKDIR_RECON}/theHarvester && pip3 install -r requirements/base.txt ; fi ; \
		if [ "$RECON_JUSTMETADATA" = "True" ] ; then cd ${WORKDIR_RECON}/Just-Metadata/setup && ./setup.sh ; fi ; \
		if [ "$RECON_SKIPTRACER" = "True" ] ; then cd ${WORKDIR_RECON}/skiptracer && pip3 install -r requirements.txt ; fi ; \
		if [ "$RECON_SPIDERFOOT" = "True" ] ; then cd ${WORKDIR_RECON}/spiderfoot &&  pip3 install -r requirements.txt ; fi ;

###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM reddocker-composition
	RUN apt-get update && apt-get -y install sudo && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
		useradd -m reddocker && echo "reddocker:reddocker" | chpasswd && adduser reddocker sudo && \
		chmod 700 -R ${WORKDIR_FULL} && chown reddocker:reddocker -R ${WORKDIR_FULL}
	USER reddocker
	EXPOSE 22 80 443 8080 8081 8000
	CMD tail -f /dev/null