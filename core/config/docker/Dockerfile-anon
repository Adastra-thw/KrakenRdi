# Dockerfile base for all images in RedDocker.
# Author: Adastra.
# Website: http://thehackerway.com 
# Github: https://github.com/Adastra-thw/docker-for-redteam  
# Simple command to generate a new image using this Dockerfile
# docker build -t adastra/docker-for-redteam:recon -f Dockerfile-recon .


###################################################################################################################
# This Dockerfile uses multi-stage build patterns to include multiple configurations and inhereit common features 
# For more information about multi-stage buildings in Docker, please read the official documentation.             
# https://docs.docker.com/develop/develop-images/multistage-build/ 												  
###################################################################################################################

# Declaration of arguments to control the building flow and create images dynamically. 
ARG VERSION=latest

###################################################################################################################
# BASE IMAGE 																							          
# DESCRIPTION:																									  
# This will be the base image, the parent of every image declared in the project. 								  
# This will include the needed software to install the tools of every stage smothly.							  
###################################################################################################################
FROM debian:${VERSION} AS base
	LABEL author="Adastra"
	LABEL description="Layer with the needed libraries and software."
	ENV ROOT_DIR /redteam
	RUN apt-get update && apt-get -y install net-tools netcat nano \
		python3 python3-dev python3-pip \
		python python-dev python-pip \
		unzip wget curl git gcc libc-dev libxslt-dev \
		openjdk-11-jre openjdk-11-jdk \
		libevent-dev libssl-dev zlib1g zlib1g-dev \
		firefox-esr xfce4-terminal \
		autoconf automake libtool apt-utils \
		openssh-server

	ENV WORKDIR_FULL=${ROOT_DIR}/tools
	ENV WORKDIR_ANON=${WORKDIR_FULL}/anon

	########################################
	#	GLOBAL VARIABLES FROM ANON IMAGE
	########################################
	ARG TOR_LATEST_VERSION=0.4.2.7
	ARG ANON_TOR_SOURCE=True
	ARG ANON_TOR_APT=False	
	ARG ANON_TORBROWSER=True
	ARG ANON_TORSOCKS=True
	ARG ANON_PROXYCHAINS=True

	ENV TOR_LATEST_VERSION $TOR_LATEST_VERSION
	ENV ANON_TOR_SOURCE $ANON_TOR_SOURCE
	ENV ANON_TOR_APT $ANON_TOR_APT	
	ENV ANON_TORBROWSER $ANON_TORBROWSER
	ENV ANON_TORSOCKS $ANON_TORSOCKS
	ENV ANON_PROXYCHAINS $ANON_PROXYCHAINS

###################################################################################################################
# ANON IMAGE 																							          
# DESCRIPTION:																									  
# Include the tools for the Anonymity stage.						 								  
# TOOLS:
#	[^] TOR
#	[^] TorBrowser
#	[^] Torsocks
#	[^] Proxychains
#	[^] Listado de ONION sites.
###################################################################################################################
FROM base AS reddocker-anon
	LABEL author="Adastra"
	LABEL description="Layer for anon stage."
	WORKDIR ${WORKDIR_ANON}
	SHELL ["/bin/bash", "-c"]
	COPY data/onionsites.txt ${WORKDIR_ANON}
	COPY data/README-anon.txt ${WORKDIR_ANON}

	RUN if [ "$ANON_TORBROWSER" = "True" ] ; then wget https://www.torproject.org/dist/torbrowser/9.0.9/tor-browser-linux64-9.0.9_en-US.tar.xz && tar -xvf tor-browser-linux64-9.0.9_en-US.tar.xz && rm -rf tor-browser-linux64-9.0.9_en-US.tar.xz; fi ; \
		if [ "$ANON_TOR_SOURCE" = "True" ] ; then wget https://dist.torproject.org/tor-${TOR_LATEST_VERSION}.tar.gz && tar -xvf tor-${TOR_LATEST_VERSION}.tar.gz && rm -rf tor-${TOR_LATEST_VERSION}.tar.gz && mv tor-${TOR_LATEST_VERSION} tor-latest; fi ; 

###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM base as reddocker-composition
	LABEL author="Adastra"
	LABEL description="Composition layer. Here everything gets prepared for the final image depending on the tools enabled."
	WORKDIR ${WORKDIR_ANON}
	COPY --from=reddocker-anon ${WORKDIR_ANON} ${WORKDIR_ANON}

	#Programs and dependencies for ANON.
	RUN if [ "$ANON_TOR_SOURCE" = "True" ] ; then cd ${WORKDIR_ANON}/tor-latest && ./configure && make; fi ; \
		if [ "$ANON_TOR_APT" = "True" ] ; then apt-get -y install tor; fi ; \
		if [ "$ANON_TORSOCKS" = "True" ] ; then apt-get -y install torsocks; fi ; \
		if [ "$ANON_PROXYCHAINS" = "True" ] ; then apt-get -y install proxychains; fi


###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM reddocker-composition
	RUN apt-get update && apt-get -y install sudo && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
		useradd -m reddocker && echo "reddocker:reddocker" | chpasswd && adduser reddocker sudo && \
		chmod 700 -R ${WORKDIR_FULL} && chown reddocker:reddocker -R ${WORKDIR_FULL}
	USER reddocker
	EXPOSE 22 80 443 8080 8081 8000
	CMD tail -f /dev/null