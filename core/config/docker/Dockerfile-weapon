# Dockerfile base for all images in RedDocker.
# Author: Adastra.
# Website: http://thehackerway.com 
# Github: https://github.com/Adastra-thw/docker-for-redteam  
# Simple command to generate a new image using this Dockerfile
# docker build -t adastra/docker-for-redteam:recon -f Dockerfile-recon .


###################################################################################################################
# This Dockerfile uses multi-stage build patterns to include multiple configurations and inhereit common features 
# For more information about multi-stage buildings in Docker, please read the official documentation.             
# https://docs.docker.com/develop/develop-images/multistage-build/ 												  
###################################################################################################################

# Declaration of arguments to control the building flow and create images dynamically. 
ARG VERSION=latest

###################################################################################################################
# BASE IMAGE 																							          
# DESCRIPTION:																									  
# This will be the base image, the parent of every image declared in the project. 								  
# This will include the needed software to install the tools of every stage smothly.							  
###################################################################################################################
FROM debian:${VERSION} AS base
	LABEL author="Adastra"
	LABEL description="Layer with the needed libraries and software."
	ENV ROOT_DIR /redteam
	RUN apt-get update && apt-get -y install net-tools netcat nano \
		python3 python3-dev python3-pip \
		python python-dev python-pip \
		unzip wget curl git gcc libc-dev libxslt-dev \
		openjdk-11-jre openjdk-11-jdk \
		libevent-dev libssl-dev zlib1g zlib1g-dev \
		firefox-esr xfce4-terminal \
		autoconf automake libtool apt-utils \
		openssh-server

	ENV WORKDIR_FULL=${ROOT_DIR}/tools
	ENV WORKDIR_WEAPON=${WORKDIR_FULL}/weapon


	########################################
	#	GLOBAL VARIABLES FROM WEAPON IMAGE
	########################################
	ARG WEAPON_CVE2018_20250=True
	ARG WEAPON_CVE2017_8759=True
	ARG WEAPON_CVE2017_8570=True
	ARG WEAPON_CVE2017_0199=True
	ARG WEAPON_DEMIGUISE=True
	ARG WEAPON_MALICIOUSMACROGENERATOR=True
	ARG WEAPON_OFFICEDDEPAYLOADS=True
	ARG WEAPON_DONTKILLMYCAT=True
	ARG WEAPON_EMBEDINHTML=True

	ENV WEAPON_CVE2018_20250 $WEAPON_CVE2018_20250
	ENV WEAPON_CVE2017_8759 $WEAPON_CVE2017_8759
	ENV WEAPON_CVE2017_8570 $WEAPON_CVE2017_8570
	ENV WEAPON_CVE2017_0199 $WEAPON_CVE2017_0199
	ENV WEAPON_DEMIGUISE $WEAPON_DEMIGUISE
	ENV WEAPON_MALICIOUSMACROGENERATOR $WEAPON_MALICIOUSMACROGENERATOR
	ENV WEAPON_OFFICEDDEPAYLOADS $WEAPON_OFFICEDDEPAYLOADS
	ENV WEAPON_DONTKILLMYCAT $WEAPON_DONTKILLMYCAT
	ENV WEAPON_EMBEDINHTML $WEAPON_EMBEDINHTML

###################################################################################################################
# WEAPON IMAGE 																							          
# DESCRIPTION:																									  
# Include the tools for the Weaponization stage.						 								  
# TOOLS:
#	[^] CVE-2018-20250: https://github.com/WyAtu/CVE-2018-20250
#	[^] CVE-2017-8759: https://github.com/bhdresh/CVE-2017-8759 
#	[^] CVE-2017-8570: https://github.com/rxwx/CVE-2017-8570
#	[^] CVE-2017-0199: https://github.com/bhdresh/CVE-2017-0199
#	[^] Demiguise: https://github.com/nccgroup/demiguise
#	[^] EmbedInHTML; https://github.com/Arno0x/EmbedInHTML
###################################################################################################################
FROM base AS reddocker-weapon
	LABEL author="Adastra"
	LABEL description="Layer for weapon stage."
	WORKDIR ${WORKDIR_WEAPON}
	SHELL ["/bin/bash", "-c"]
	# Installation for WINRAR RCE: https://github.com/WyAtu/CVE-2018-20250
	RUN if [ "$WEAPON_CVE2018_20250" = "True" ] ; then git clone https://github.com/WyAtu/CVE-2018-20250 CVE2018_20250; fi ; \
		if [ "$WEAPON_CVE2017_8759" = "True" ] ; then git clone https://github.com/bhdresh/CVE-2017-8759 CVE2017_8759; fi ; \
		if [ "$WEAPON_CVE2017_8570" = "True" ] ; then git clone https://github.com/rxwx/CVE-2017-8570 CVE2017_8570; fi ; \
		if [ "$WEAPON_CVE2017_0199" = "True" ] ; then git clone https://github.com/bhdresh/CVE-2017-0199 CVE2017_0199; fi ; \
		if [ "$WEAPON_DEMIGUISE" = "True" ] ; then git clone https://github.com/nccgroup/demiguise; fi ; \
		if [ "$WEAPON_MALICIOUSMACROGENERATOR" = "True" ] ; then git clone https://github.com/Mr-Un1k0d3r/MaliciousMacroGenerator; fi ; \
		if [ "$WEAPON_OFFICEDDEPAYLOADS" = "True" ] ; then git clone https://github.com/0xdeadbeefJERKY/Office-DDE-Payloads && cd Office-DDE-Payloads && pip install -r requirements.txt; fi ; \
		if [ "$WEAPON_DONTKILLMYCAT" = "True" ] ; then git clone https://github.com/Mr-Un1k0d3r/DKMC && cd DKMC && mkdir output; fi ; \
		if [ "$WEAPON_EMBEDINHTML" = "True" ] ; then git clone https://github.com/Arno0x/EmbedInHTML; fi


###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM base as reddocker-composition
	LABEL author="Adastra"
	LABEL description="Composition layer. Here everything gets prepared for the final image depending on the tools enabled."
	WORKDIR ${WORKDIR_WEAPON}
	COPY --from=reddocker-weapon ${WORKDIR_WEAPON} ${WORKDIR_WEAPON}

###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM reddocker-composition
	RUN apt-get update && apt-get -y install sudo && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
		useradd -m reddocker && echo "reddocker:reddocker" | chpasswd && adduser reddocker sudo && \
		chmod 700 -R ${WORKDIR_FULL} && chown reddocker:reddocker -R ${WORKDIR_FULL}
	USER reddocker
	EXPOSE 22 80 443 8080 8081 8000
	CMD tail -f /dev/null