# Rapid Deployment Infrastructure for Red Teaming and Penetration Testing.
# Kraken RDI 
# Author: Adastra.
# Website: http://thehackerway.com 
# Github: https://github.com/Adastra-thw/KrakenRdi
# Simple command to generate a new image using this Dockerfile
# docker build -t adastra/KrakenRDI:<LAYER> -f Dockerfile-<LAYER> .


###################################################################################################################
# This Dockerfile uses multi-stage build patterns to include multiple configurations and inhereit common features 
# For more information about multi-stage buildings in Docker, please read the official documentation.             
# https://docs.docker.com/develop/develop-images/multistage-build/ 												  
###################################################################################################################

# Declaration of arguments to control the building flow and create images dynamically. 
ARG VERSION=latest

###################################################################################################################
# BASE IMAGE 																							          
# DESCRIPTION:																									  
# This will be the base image, the parent of every image declared in the project. 								  
# This will include the needed software to install the tools of every stage smothly.							  
###################################################################################################################
FROM debian:${VERSION} AS base
	LABEL author="Adastra"
	LABEL description="Layer with the needed libraries and software."
	ENV ROOT_DIR /redteam
	SHELL ["/bin/bash", "-c"]

	########################################
	#	WORKING DIRS FROM ANON IMAGE
	########################################
	ENV WORKDIR_FULL=${ROOT_DIR}/tools
	ENV WORKDIR_ANON=${WORKDIR_FULL}/anon

	########################################
	#	CONFIGURATION AND SYSTEM VARIABLES
	########################################
	ARG USERNAME=krakenrdi
	ARG PASSWORD=krakenrdi
	ARG EXPOSE_PORTS="22 80 443 3306 5432 8080 8081 8000"

	ENV USERNAME $USERNAME
	ENV PASSWORD $PASSWORD
	ENV EXPOSE_PORTS $EXPOSE_PORTS

	########################################
	#	GLOBAL VARIABLES FROM ANON IMAGE
	########################################
	ARG ANON_TOR_SOURCE=True
	ARG ANON_TOR_APT=False	
	ARG ANON_TORBROWSER=True
	ARG ANON_TORSOCKS=True
	ARG ANON_PROXYCHAINS=True

	ENV ANON_TOR_SOURCE $ANON_TOR_SOURCE
	ENV ANON_TOR_APT $ANON_TOR_APT
	ENV ANON_TORBROWSER $ANON_TORBROWSER
	ENV ANON_TORSOCKS $ANON_TORSOCKS
	ENV ANON_PROXYCHAINS $ANON_PROXYCHAINS

	########################################
	#	BASE SOFTWARE INSTALLATION
	########################################
	RUN apt-get update && apt-get -y install net-tools netcat socat nano locate \
		python3 python3-dev python3-pip \ 
		python python-dev \
		unzip wget curl git gcc libc-dev libxslt-dev \
		openjdk-11-jre openjdk-11-jdk \
		libevent-dev libssl-dev zlib1g zlib1g-dev \
		firefox-esr xfce4-terminal \
		autoconf automake libtool apt-utils \
		openssh-server openssl \
		build-essential libpcap-dev libpq-dev libsqlite3-dev \
		software-properties-common sudo locate \
		&& useradd -m ${USERNAME} \
		&& echo "${USERNAME}:${PASSWORD}" | chpasswd \
		&& adduser ${USERNAME} sudo

###################################################################################################################
# ANON IMAGE 																							          
# DESCRIPTION:																									  
# Include the tools for the Anonymity stage.						 								  
# TOOLS:
#	[^] TOR
#	[^] TorBrowser
#	[^] Torsocks
#	[^] Proxychains
#	[^] Listado de ONION sites.
###################################################################################################################
FROM base AS kraken-anon
	LABEL author="Adastra"
	LABEL description="Layer for anon stage."
	WORKDIR ${WORKDIR_ANON}
	SHELL ["/bin/bash", "-c"]
	COPY data/onionsites.txt ${WORKDIR_ANON}
	COPY data/README-anon.txt ${WORKDIR_ANON}
	COPY data/torrc ${WORKDIR_ANON}

	RUN if [ "$ANON_TORBROWSER" = "True" ] ; then wget https://www.torproject.org/dist/torbrowser/11.0.11/tor-browser-linux64-11.0.11_en-US.tar.xz && tar -xvf tor-browser-linux64-11.0.11_en-US.tar.xz && rm -rf tor-browser-linux64-11.0.11_en-US.tar.xz; fi ; \
		if [ "$ANON_TOR_SOURCE" = "True" ] ; then export TOR_VERSION=$(curl -s https://www.torproject.org/download/tor/ | grep gitweb | grep "0." | cut -d "=" -f 3 | cut -d "-" -f 2 | cut -d "\"" -f 1) && wget https://dist.torproject.org/tor-$TOR_VERSION.tar.gz && tar -xvf tor-$TOR_VERSION.tar.gz && rm -rf tor-$TOR_VERSION.tar.gz && mv tor-$TOR_VERSION tor-latest; fi ; 

###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM base as kraken-composition
	LABEL author="Adastra"
	LABEL description="Composition layer. Here everything gets prepared for the final image depending on the tools enabled."
	WORKDIR ${WORKDIR_ANON}
	COPY --from=kraken-anon ${WORKDIR_ANON} ${WORKDIR_ANON}

	#Programs and dependencies for ANON.
	RUN if [ "$ANON_TOR_SOURCE" = "True" ] ; then cd ${WORKDIR_ANON}/tor-latest && ./configure && make; fi ; \
		if [ "$ANON_TOR_APT" = "True" ] ; then apt-get -y install tor; fi ; \
		if [ "$ANON_TORSOCKS" = "True" ] ; then apt-get -y install torsocks; fi ; \
		if [ "$ANON_PROXYCHAINS" = "True" ] ; then apt-get -y install proxychains; fi

###################################################################################################################
# OUTPUT LAYER 																							          
# DESCRIPTION:																									  
# The final instructions before create the container. In this layer Docker will clean temporary files, 
# change the user, expose the defined ports and keeps the container up and running.										  
###################################################################################################################
FROM kraken-composition
		USER root
	SHELL ["/bin/bash", "-c"]
	RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
		chmod 700 -R ${WORKDIR_FULL} && chown ${USERNAME}:${USERNAME} -R ${WORKDIR_FULL}
	EXPOSE $EXPOSE_PORTS
	USER ${USERNAME}
	CMD tail -f /dev/null