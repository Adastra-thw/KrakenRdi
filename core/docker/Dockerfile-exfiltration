# Rapid Deployment Infrastructure for Red Teaming and Penetration Testing.
# Kraken RDI 
# Author: Adastra.
# Website: http://thehackerway.com 
# Github: https://github.com/Adastra-thw/KrakenRdi
# Simple command to generate a new image using this Dockerfile
# docker build -t adastra/KrakenRDI:<LAYER> -f Dockerfile-<LAYER> .


###################################################################################################################
# This Dockerfile uses multi-stage build patterns to include multiple configurations and inhereit common features 
# For more information about multi-stage buildings in Docker, please read the official documentation.             
# https://docs.docker.com/develop/develop-images/multistage-build/ 												  
###################################################################################################################

# Declaration of arguments to control the building flow and create images dynamically. 
ARG VERSION=latest

###################################################################################################################
# BASE IMAGE 																							          
# DESCRIPTION:																									  
# This will be the base image, the parent of every image declared in the project. 								  
# This will include the needed software to install the tools of every stage smothly.							  
###################################################################################################################
FROM debian:${VERSION} AS base
	LABEL author="Adastra"
	LABEL description="Layer with the needed libraries and software."
	ENV ROOT_DIR /redteam
	SHELL ["/bin/bash", "-c"]

	########################################
	#	WORKING DIRS FROM EXFILTRATION IMAGE
	########################################
	ENV WORKDIR_EXFILTRATION=${WORKDIR_FULL}/9_exfiltration

	########################################
	#	CONFIGURATION AND SYSTEM VARIABLES
	########################################
	ARG USERNAME=krakenrdi
	ARG PASSWORD=krakenrdi
	ARG EXPOSE_PORTS="22 80 443 3306 5432 8080 8081 8000"

	ENV USERNAME $USERNAME
	ENV PASSWORD $PASSWORD
	ENV EXPOSE_PORTS $EXPOSE_PORTS

	########################################
	#	GLOBAL VARIABLES FROM EXFILTRATION IMAGE
	########################################
	ARG EXFILTRATION_MISTICA=True
	
	ENV EXFILTRATION_MISTICA $EXFILTRATION_MISTICA
	
	########################################
	#	BASE SOFTWARE INSTALLATION
	########################################
	RUN apt-get update && apt-get -y install net-tools netcat socat nano locate \
		python3 python3-dev python3-pip \
		python python-dev python-pip \
		unzip wget curl git gcc libc-dev libxslt-dev \
		openjdk-11-jre openjdk-11-jdk \
		libevent-dev libssl-dev zlib1g zlib1g-dev \
		firefox-esr xfce4-terminal \
		autoconf automake libtool apt-utils \
		openssh-server openssl \
		build-essential libpcap-dev libpq-dev libsqlite3-dev libsqlite3-0 \
		software-properties-common sudo locate \
		&& useradd -m ${USERNAME} \
		&& echo "${USERNAME}:${PASSWORD}" | chpasswd \
		&& adduser ${USERNAME} sudo

###################################################################################################################
# EXFILTRATION IMAGE 																							          
# DESCRIPTION:																									  
# Include the tools for the exfiltration stage.						 								  
# TOOLS:																										  
#	[^] Mistica 
###################################################################################################################
FROM base AS kraken-exfiltration
	LABEL author="Adastra"
	LABEL description="Layer for exfiltration stage."
	WORKDIR ${WORKDIR_EXFILTRATION}
	SHELL ["/bin/bash", "-c"]
	#Copy resources to EXFILTRATION directory.
	COPY data/README-exfiltration.txt ${WORKDIR_EXFILTRATION}	
	
	RUN if [ "$EXFILTRATION_MISTICA" = "True" ] ; then cd ${WORKDIR_EXFILTRATION} && git clone https://github.com/IncideDigital/Mistica Mistica; fi


###################################################################################################################
# COMPOSITION LAYER 																							          
# DESCRIPTION:																									  
# Include every layer of this Dockerfile to create the final composition										  
###################################################################################################################
FROM base as kraken-composition
	LABEL author="Adastra"
	LABEL description="Composition layer. Here everything gets prepared for the final image depending on the tools enabled."
	WORKDIR ${WORKDIR_EXFILTRATION}

	COPY --from=kraken-exfiltration	${WORKDIR_EXFILTRATION} ${WORKDIR_EXFILTRATION}

	#Programs and dependencies for EXFILTRATION.
	RUN if [ "$EXFILTRATION_MISTICA" = "True" ] ; then cd ${WORKDIR_EXFILTRATION}/Mistica && pip3 install dnslib && python3 -m pip install pyinstaller && pyinstaller --onefile --hiddenimport overlay.client.io --hiddenimport overlay.client.shell --hiddenimport overlay.client.tcpconnect --hiddenimport overlay.client.tcplisten --hiddenimport wrapper.client.http --hiddenimport wrapper.client.dns --hiddenimport wrapper.client.icmp --hiddenimport overlay.server.io --hiddenimport overlay.server.shell --hiddenimport overlay.server.tcpconnect --hiddenimport overlay.server.tcplisten --hiddenimport wrapper.server.wrap_module.http --hiddenimport wrapper.server.wrap_module.dns --hiddenimport wrapper.server.wrap_module.icmp --hiddenimport wrapper.server.wrap_server.httpserver --hiddenimport wrapper.server.wrap_server.dnsserver --hiddenimport wrapper.server.wrap_server.icmpserver mc.py; fi

###################################################################################################################
# OUTPUT LAYER 																							          
# DESCRIPTION:																									  
# The final instructions before create the container. In this layer Docker will clean temporary files, 
# change the user, expose the defined ports and keeps the container up and running.										  
###################################################################################################################
FROM kraken-composition
	USER root
	SHELL ["/bin/bash", "-c"]
	RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
		chmod 700 -R ${WORKDIR_EXFILTRATION} && chown ${USERNAME}:${USERNAME} -R ${WORKDIR_EXFILTRATION}
	EXPOSE $EXPOSE_PORTS
	USER ${USERNAME}
	CMD tail -f /dev/null